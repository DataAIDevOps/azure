{
	"name": "ParquetCrud",
	"properties": {
		"description": "This Data Flow runs CRUD operations on a parquet sink using the following Parquet Inputs:\n1. Primary Key Table: a list of primary keys of rows that exist. This can be both the master list of primary keys or just a list of primary keys of rows that have been inserted/updated\n2. Input Data: A List of rows that are inserted, updated and deleted\n3. Existing Data: The existing sink data base\n\nThe output of this Data Flow is the equivalent of a MERGE command in SQL",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "InputParquet",
						"type": "DatasetReference"
					},
					"name": "OldInputData"
				},
				{
					"dataset": {
						"referenceName": "InputParquet",
						"type": "DatasetReference"
					},
					"name": "InputData"
				},
				{
					"dataset": {
						"referenceName": "InputParquet",
						"type": "DatasetReference"
					},
					"name": "InputData2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlDatabaseSinkDataset",
						"type": "DatasetReference"
					},
					"name": "ToDWHTruckAndInserts"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlDatabaseSinkDataset",
						"type": "DatasetReference"
					},
					"name": "Sink2AzureSQLDB"
				}
			],
			"transformations": [
				{
					"name": "FilterNewAndUpdated"
				},
				{
					"name": "AlterRow"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('roundRobin', 2)) ~> OldInputData\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionBy('roundRobin', 2)) ~> InputData\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> InputData2\nInputData, OldInputData exists(InputData@RecID == OldInputData@RecID && InputData@RecVersion == OldInputData@RecVersion,\n\tnegate:true,\n\tbroadcast: 'auto')~> FilterNewAndUpdated\nFilterNewAndUpdated alterRow(insertIf(FilterNewAndUpdated@VersionID == 1),\n\tupdateIf(FilterNewAndUpdated@VersionID != 1)) ~> AlterRow\nInputData2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ToDWHTruckAndInserts\nAlterRow sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:[(NewAndUpdated@RecID)],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink2AzureSQLDB"
		}
	}
}