{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Filter1"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tvisit_id as integer,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\tupdated_datetime as timestamp,\n\t\tphone as string,\n\t\tstore_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nDerivedColumn1 filter(ERROR_FUNCTION('')) ~> Filter1\nsource1 derive(each(match(type == 'integer'), concat($$, '_dev') = $$+visit_id),\n\t\teach(match(startsWith(name, 'updated')), concat($$, '_dev') = toLong(toString($$, 'yyyyMMddHHmmssSSS')), concat($$, 'dev2') = addDays($$, 12), concat($$, '_dev3') = toUTC($$), concat($$, '_dev4') = fromUTC($$, 'EST')),\n\t\tphone = iif(rlike(phone, '\\\\d{10}'), phone,'7818886666'),\n\t\tfirst_name = regexReplace(first_name, \"[\\\\x09|\\\\x0D|\\\\x0A|\\\\x20]\", ' '),\n\t\tlast_name = regexReplace(last_name, \"[\\t\\r\\n]\", 'P')) ~> DerivedColumn1"
		}
	}
}