{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "openhackadfjl"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/flattenMovies')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "JsonFromRaw",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet4OnlineMoviesFlattenedDS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Flatten1"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\t{_attachments} as string,\n\t\t{_etag} as string,\n\t\t{_rid} as string,\n\t\t{_self} as string,\n\t\t{_ts} as integer,\n\t\tactors as (name as string)[],\n\t\tavailabilityDate as timestamp,\n\t\tgenre as string,\n\t\tid as string,\n\t\trating as string,\n\t\treleaseYear as short,\n\t\truntime as short,\n\t\tstreamingAvailabilityDate as timestamp,\n\t\ttier as short,\n\t\ttitle as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['movies/**']) ~> source1\nsource1 foldDown(unroll(actors, actors),\n\tmapColumn(\n\t\t{_attachments},\n\t\t{_etag},\n\t\t{_rid},\n\t\t{_self},\n\t\t{_ts},\n\t\tavailabilityDate,\n\t\tgenre,\n\t\tid,\n\t\trating,\n\t\treleaseYear,\n\t\truntime,\n\t\tstreamingAvailabilityDate,\n\t\ttier,\n\t\ttitle,\n\t\tname = actors.name\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 derive(SourceSystemId = 1,\n\t\treleaseYear = toLong(releaseYear)) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['onlineMoviesFlattened'],\n\ttruncate: true,\n\tmapColumn(\n\t\tSourceSystemId,\n\t\tSourceSystemMovieId = id,\n\t\tSouthridgeMovieId = id,\n\t\tPhysicalAvailabilityDate = availabilityDate,\n\t\tStreamingAvailabilityDate = streamingAvailabilityDate,\n\t\tGenre = genre,\n\t\tTitle = title,\n\t\tRating = rating,\n\t\tRuntimeMinutes = runtime,\n\t\tTheatricalReleaseYear = releaseYear,\n\t\tActorName = name\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/prodMovieCatalogFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ParquetOnpremiseMovies",
								"type": "DatasetReference"
							},
							"name": "onpremisescombinedmovies"
						},
						{
							"dataset": {
								"referenceName": "ParquetOnpremisesMovieActors",
								"type": "DatasetReference"
							},
							"name": "onpremisescombinedmovieactors"
						},
						{
							"dataset": {
								"referenceName": "ParquetOnlineMovies",
								"type": "DatasetReference"
							},
							"name": "onlinemovies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ParquetFinalOnlineCatalogDS",
								"type": "DatasetReference"
							},
							"name": "finalOnlineMovieCatalog"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Join3"
						},
						{
							"name": "DerivedColumn3"
						}
					],
					"script": "source(output(\n\t\tMovieID as string,\n\t\tMovieTitle as string,\n\t\tCategory as string,\n\t\tRating as string,\n\t\tRunTimeMin as integer,\n\t\tReleaseDate as date,\n\t\tOnlineMovieID as string,\n\t\tSourceSystemId as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> onpremisescombinedmovies\nsource(output(\n\t\tMovieActorID as string,\n\t\tMovieID as string,\n\t\tActorID as string,\n\t\tOnlineMovieID as string,\n\t\tActorName as string,\n\t\tGender as string,\n\t\tSourceSystemId as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> onpremisescombinedmovieactors\nsource(output(\n\t\tSourceSystemId as integer,\n\t\tSourceSystemMovieId as string,\n\t\tPhysicalAvailabilityDate as timestamp,\n\t\tStreamingAvailabilityDate as timestamp,\n\t\tGenre as string,\n\t\tTitle as string,\n\t\tRating as string,\n\t\tRuntimeMinutes as short,\n\t\tTheatricalReleaseYear as short,\n\t\tActorName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> onlinemovies\nonpremisescombinedmovies, onpremisescombinedmovieactors join(onpremisescombinedmovies@OnlineMovieID == onpremisescombinedmovieactors@OnlineMovieID,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tSourceSystemMovieId = onpremisescombinedmovieactors@MovieID,\n\t\tTitle = MovieTitle,\n\t\tGenre = Category,\n\t\tRating,\n\t\tRuntimeMinutes = RunTimeMin,\n\t\tTheatricalReleaseYear = ReleaseDate,\n\t\tActorId = ActorID,\n\t\tSouthridgeMovieId = onpremisescombinedmovieactors@OnlineMovieID,\n\t\tActorName,\n\t\tActorGender = Gender,\n\t\tSourceSystemId = onpremisescombinedmovieactors@SourceSystemId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nonlinemovies derive(SouthridgeMovieId = SourceSystemMovieId,\n\t\tActorId = 0,\n\t\tGender = \"NA\",\n\t\tSourceSystemId = toString(SourceSystemId),\n\t\tRuntimeMinutes = toLong(RuntimeMinutes),\n\t\tTheatricalReleaseYear = toLong(TheatricalReleaseYear)) ~> DerivedColumn1\nSelect1 derive(PhysicalAvailabilityDate = currentDate(),\n\t\tStreamingAvailabilityDate = currentDate(),\n\t\tSourceSystemId = toString(SourceSystemId),\n\t\tRuntimeMinutes = toLong(RuntimeMinutes),\n\t\tTheatricalReleaseYear = toLong(TheatricalReleaseYear)) ~> DerivedColumn2\nDerivedColumn1 select(mapColumn(\n\t\tSourceSystemId,\n\t\tSourceSystemMovieId,\n\t\tPhysicalAvailabilityDate,\n\t\tStreamingAvailabilityDate,\n\t\tGenre,\n\t\tTitle,\n\t\tRating,\n\t\tRuntimeMinutes,\n\t\tTheatricalReleaseYear,\n\t\tActorName,\n\t\tSouthridgeMovieId,\n\t\tActorId,\n\t\tGender\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2, DerivedColumn2 join(Select2@SouthridgeMovieId == Select1@SouthridgeMovieId\n\t&& lower(Select2@ActorName) == lower(Select1@ActorName),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 derive(CatalogId = uuid()) ~> DerivedColumn3\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['finalOnlineCatalog'],\n\tmapColumn(\n\t\tSourceSystemId = Select2@SourceSystemId,\n\t\tSourceSystemMovieId = Select2@SourceSystemMovieId,\n\t\tSouthridgeMovieId = Select2@SouthridgeMovieId,\n\t\tPhysicalAvailabilityDate = Select2@PhysicalAvailabilityDate,\n\t\tStreamingAvailabilityDate = Select2@StreamingAvailabilityDate,\n\t\tGenre = Select2@Genre,\n\t\tTitle = Select2@Title,\n\t\tRating = Select2@Rating,\n\t\tRuntimeMinutes = Select2@RuntimeMinutes,\n\t\tTheatricalReleaseYear,\n\t\tActorName = Select2@ActorName,\n\t\tActorId = Select1@ActorId,\n\t\tActorGender,\n\t\tCatalogId\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> finalOnlineMovieCatalog"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stageOnpremiseMovieDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VanarsdelMovieDS",
								"type": "DatasetReference"
							},
							"name": "VanarsdelMovieSr"
						},
						{
							"dataset": {
								"referenceName": "VanardselMovieMapDS",
								"type": "DatasetReference"
							},
							"name": "VanarsdelMovieMap"
						},
						{
							"dataset": {
								"referenceName": "DelimitedFourthCoffeeMovieDS",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeMovieSr"
						},
						{
							"dataset": {
								"referenceName": "FourthCoffeeMovieMapDS",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeMovieMap"
						},
						{
							"dataset": {
								"referenceName": "VanarsdelMovieActorDS",
								"type": "DatasetReference"
							},
							"name": "VanarsdelMoveActors"
						},
						{
							"dataset": {
								"referenceName": "VanarsdelActorsDS",
								"type": "DatasetReference"
							},
							"name": "VanarsdelActorsSr"
						},
						{
							"dataset": {
								"referenceName": "FourthCoffeeMovieActorsDS",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeMovieActorsSr"
						},
						{
							"dataset": {
								"referenceName": "FourthCoffeeActorsDS",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeActorsSr"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "combinedStageMovies",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "CombinedMovieActorDS",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Join3"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Join4"
						},
						{
							"name": "Select4"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Union1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Join5"
						},
						{
							"name": "Select5"
						},
						{
							"name": "Join6"
						},
						{
							"name": "Select6"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "Union2"
						},
						{
							"name": "DerivedColumnToHandleReleaseDate"
						}
					],
					"script": "source(output(\n\t\tMovieID as string,\n\t\tMovieTitle as string,\n\t\tCategory as string,\n\t\tRating as string,\n\t\tRunTimeMin as integer,\n\t\tReleaseDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelMovieSr\nsource(output(\n\t\tMovieID as string,\n\t\tOnlineMovieID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelMovieMap\nsource(output(\n\t\tMovieID as string,\n\t\tMovieTitle as string,\n\t\tCategory as string,\n\t\tRating as string,\n\t\tRunTimeMin as short,\n\t\tReleaseDate as date 'MM-dd-yyyy'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeMovieSr\nsource(output(\n\t\tMovieID as string,\n\t\tOnlineMovieID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeMovieMap\nsource(output(\n\t\tMovieActorID as string,\n\t\tMovieID as string,\n\t\tActorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelMoveActors\nsource(output(\n\t\tActorID as string,\n\t\tActorName as string,\n\t\tGender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelActorsSr\nsource(output(\n\t\tMovieActorID as string,\n\t\tMovieID as string,\n\t\tActorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeMovieActorsSr\nsource(output(\n\t\tActorID as string,\n\t\tActorName as string,\n\t\tGender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeActorsSr\nDerivedColumnToHandleReleaseDate, VanarsdelMovieMap join(VanarsdelMovieSr@MovieID == VanarsdelMovieMap@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tMovieID = VanarsdelMovieSr@MovieID,\n\t\tMovieTitle,\n\t\tCategory,\n\t\tRating,\n\t\tRunTimeMin,\n\t\tReleaseDate,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFourthCoffeeMovieSr, FourthCoffeeMovieMap join(FourthCoffeeMovieSr@MovieID == FourthCoffeeMovieMap@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tMovieID = FourthCoffeeMovieSr@MovieID,\n\t\tMovieTitle,\n\t\tCategory,\n\t\tRating,\n\t\tRunTimeMin,\n\t\tReleaseDate,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nVanarsdelMoveActors, VanarsdelMovieMap join(VanarsdelMoveActors@MovieID == VanarsdelMovieMap@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 select(mapColumn(\n\t\tMovieActorID,\n\t\tMovieID = VanarsdelMoveActors@MovieID,\n\t\tActorID,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3, VanarsdelActorsSr join(Select3@ActorID == VanarsdelActorsSr@ActorID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join4\nJoin4 select(mapColumn(\n\t\tMovieActorID,\n\t\tMovieID,\n\t\tActorID = Select3@ActorID,\n\t\tOnlineMovieID,\n\t\tActorName,\n\t\tGender\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nSelect4 derive(SourceSystemId = 3) ~> DerivedColumn1\nDerivedColumn2, DerivedColumn3 union(byName: true)~> Union1\nSelect1 derive(SourceSystemId = 3,\n\t\tReleaseDate = year(ReleaseDate)*10000+month(ReleaseDate)*100+dayOfMonth(ReleaseDate)) ~> DerivedColumn2\nSelect2 derive(SourceSystemId = 2,\n\t\tReleaseDate = year(ReleaseDate)*10000+month(ReleaseDate)*100+dayOfMonth(ReleaseDate)) ~> DerivedColumn3\nFourthCoffeeMovieActorsSr, FourthCoffeeMovieMap join(FourthCoffeeMovieActorsSr@MovieID == FourthCoffeeMovieMap@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join5\nJoin5 select(mapColumn(\n\t\tMovieActorID,\n\t\tMovieID = FourthCoffeeMovieActorsSr@MovieID,\n\t\tActorID,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect5, FourthCoffeeActorsSr join(Select5@ActorID == FourthCoffeeActorsSr@ActorID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join6\nJoin6 select(mapColumn(\n\t\tMovieActorID,\n\t\tMovieID,\n\t\tActorID = Select5@ActorID,\n\t\tOnlineMovieID,\n\t\tActorName,\n\t\tGender\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nSelect6 derive(SourceSystemId = 2) ~> DerivedColumn4\nDerivedColumn1, DerivedColumn4 union(byName: true)~> Union2\nVanarsdelMovieSr derive(ReleaseDate = toDate(ReleaseDate, \"MM-dd-yyyy\")) ~> DerivedColumnToHandleReleaseDate\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['combinedOnPremiseMovies'],\n\ttruncate: true,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nUnion2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['combinedMovieActors'],\n\ttruncate: true,\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": []
		}
	]
}