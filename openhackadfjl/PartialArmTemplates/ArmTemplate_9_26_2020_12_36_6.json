{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "openhackadfjl"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/stageOnpremiseTransactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "stageOnPremiseTransactionDF",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/stageOnPremiseTransactionDF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RawMovie",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Transactions.csv",
						"folderPath": "fourthCoffee",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TransactionID",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "MovieID",
						"type": "String"
					},
					{
						"name": "RentalDate",
						"type": "String"
					},
					{
						"name": "ReturnDate",
						"type": "String"
					},
					{
						"name": "RentalCost",
						"type": "String"
					},
					{
						"name": "LateFee",
						"type": "String"
					},
					{
						"name": "RewindFlag",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "UpdatedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/combinedStageOnPremTransactionDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StagingDataLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "combinedTransactions",
						"fileSystem": "stage"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/vanarsdelTransDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RawMovie",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Transactions",
						"folderPath": "vanarsdel",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "TransactionID",
						"type": "UTF8"
					},
					{
						"name": "CustomerID",
						"type": "UTF8"
					},
					{
						"name": "MovieID",
						"type": "UTF8"
					},
					{
						"name": "RentalDate",
						"type": "INT32"
					},
					{
						"name": "ReturnDate",
						"type": "INT32"
					},
					{
						"name": "RentalCost",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LateFee",
						"type": "DECIMAL",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "RewindFlag",
						"type": "BOOLEAN"
					},
					{
						"name": "CreatedDate",
						"type": "DATE"
					},
					{
						"name": "UpdatedDate",
						"type": "DATE"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stageOnPremiseTransactionDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "vanarsdelTransDS",
								"type": "DatasetReference"
							},
							"name": "VanarsdelTransactionsSr"
						},
						{
							"dataset": {
								"referenceName": "VanardselMovieMapDS",
								"type": "DatasetReference"
							},
							"name": "VanarsdelMovieMapSr"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeTransactionSr"
						},
						{
							"dataset": {
								"referenceName": "FourthCoffeeMovieMapDS",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeMovieMapSr"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "combinedStageOnPremTransactionDS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Union1"
						}
					],
					"script": "source(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tRentalDate as integer,\n\t\tReturnDate as integer,\n\t\tRentalCost as decimal(19,4),\n\t\tLateFee as decimal(19,4),\n\t\tRewindFlag as boolean,\n\t\tCreatedDate as date,\n\t\tUpdatedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelTransactionsSr\nsource(output(\n\t\tMovieID as string,\n\t\tOnlineMovieID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelMovieMapSr\nsource(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tRentalDate as string,\n\t\tReturnDate as string,\n\t\tRentalCost as string,\n\t\tLateFee as string,\n\t\tRewindFlag as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeTransactionSr\nsource(output(\n\t\tMovieID as string,\n\t\tOnlineMovieID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeMovieMapSr\nVanarsdelTransactionsSr, VanarsdelMovieMapSr join(VanarsdelTransactionsSr@MovieID == VanarsdelMovieMapSr@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tTransactionID,\n\t\tCustomerID,\n\t\tMovieID = VanarsdelTransactionsSr@MovieID,\n\t\tRentalDate,\n\t\tReturnDate,\n\t\tRentalCost,\n\t\tLateFee,\n\t\tRewindFlag,\n\t\tCreatedDate,\n\t\tUpdatedDate,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(SourceSystemId = 3,\n\t\tRentalDate = toDate(concat(left(toString(RentalDate), 4), '-', left(right(toString(RentalDate),4), 2), '-', right(right(toString(RentalDate), 4), 2)), \"yyyy-MM-dd\"),\n\t\tReturnDate = toDate(concat(left(toString(ReturnDate), 4), '-', left(right(toString(ReturnDate),4), 2), '-', right(right(toString(ReturnDate), 4), 2)), \"yyyy-MM-dd\"),\n\t\tRentalCost = toDecimal(RentalCost),\n\t\tLateFee = toDecimal(LateFee)) ~> DerivedColumn1\nFourthCoffeeTransactionSr, FourthCoffeeMovieMapSr join(FourthCoffeeTransactionSr@MovieID == FourthCoffeeMovieMapSr@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tTransactionID,\n\t\tCustomerID,\n\t\tMovieID = FourthCoffeeTransactionSr@MovieID,\n\t\tRentalDate,\n\t\tReturnDate,\n\t\tRentalCost,\n\t\tLateFee,\n\t\tRewindFlag,\n\t\tCreatedDate,\n\t\tUpdatedDate,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 derive(SourceSystemId = 2,\n\t\tRentalDate = toDate(concat(left(toString(RentalDate), 4), '-', left(right(toString(RentalDate),4), 2), '-', right(right(toString(RentalDate), 4), 2)), \"yyyy-MM-dd\"),\n\t\tReturnDate = toDate(concat(left(toString(ReturnDate), 4), '-', left(right(toString(ReturnDate),4), 2), '-', right(right(toString(ReturnDate), 4), 2)), \"yyyy-MM-dd\"),\n\t\tLateFee = toDecimal(LateFee),\n\t\tRentalCost = toDecimal(RentalCost),\n\t\tRewindFlag = toBoolean(toString(RewindFlag)),\n\t\tCreatedDate = toDate(CreatedDate),\n\t\tUpdatedDate = toDate(UpdatedDate)) ~> DerivedColumn2\nDerivedColumn1, DerivedColumn2 union(byName: true)~> Union1\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['combinedOnPremTransactions'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/vanarsdelTransDS')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/combinedStageOnPremTransactionDS')]"
			]
		}
	]
}