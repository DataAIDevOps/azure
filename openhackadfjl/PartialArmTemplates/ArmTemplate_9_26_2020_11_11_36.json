{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "openhackadfjl"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/stageOnpremiseMovies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "stageOnpremiseMovieDF",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/stageOnpremiseMovieDF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CombinedMovieActorDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StagingDataLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "combinedMovieActors",
						"fileSystem": "stage"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedFourthCoffeeMovieDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RawMovie",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Movies.csv",
						"folderPath": "fourthCoffee",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffeeActorsDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RawMovie",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Actors.csv",
						"folderPath": "fourthCoffee",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "String"
					},
					{
						"name": "ActorName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffeeMovieActorsDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RawMovie",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "MovieActors.csv",
						"folderPath": "fourthCoffee",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "MovieActorID",
						"type": "String"
					},
					{
						"name": "MovieID",
						"type": "String"
					},
					{
						"name": "ActorID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FourthCoffeeMovieMapDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RawMovie",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OnlineMovieMappings.csv",
						"folderPath": "fourthCoffee",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "MovieID",
						"type": "String"
					},
					{
						"name": "OnlineMovieID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanardselMovieMapDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage4VanArsDel",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "OnlineMovieMappings",
						"folderPath": "vanarsdel",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "MovieID",
						"type": "UTF8"
					},
					{
						"name": "OnlineMovieID",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanarsdelActorsDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RawMovie",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Actors",
						"folderPath": "vanarsdel",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ActorID",
						"type": "UTF8"
					},
					{
						"name": "ActorName",
						"type": "UTF8"
					},
					{
						"name": "Gender",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanarsdelMovieActorDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RawMovie",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "MovieActors",
						"folderPath": "vanarsdel",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "MovieActorID",
						"type": "UTF8"
					},
					{
						"name": "MovieID",
						"type": "UTF8"
					},
					{
						"name": "ActorID",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VanarsdelMovieDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage4VanArsDel",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Movies",
						"folderPath": "vanarsdel",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "MovieID",
						"type": "UTF8"
					},
					{
						"name": "MovieTitle",
						"type": "UTF8"
					},
					{
						"name": "Category",
						"type": "UTF8"
					},
					{
						"name": "Rating",
						"type": "UTF8"
					},
					{
						"name": "RunTimeMin",
						"type": "INT32"
					},
					{
						"name": "ReleaseDate",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/combinedStageMovies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StagingDataLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "combinedMovies",
						"fileSystem": "stage"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stageOnpremiseMovieDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "VanarsdelMovieDS",
								"type": "DatasetReference"
							},
							"name": "VanarsdelMovieSr"
						},
						{
							"dataset": {
								"referenceName": "VanardselMovieMapDS",
								"type": "DatasetReference"
							},
							"name": "VanarsdelMovieMap"
						},
						{
							"dataset": {
								"referenceName": "DelimitedFourthCoffeeMovieDS",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeMovieSr"
						},
						{
							"dataset": {
								"referenceName": "FourthCoffeeMovieMapDS",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeMovieMap"
						},
						{
							"dataset": {
								"referenceName": "VanarsdelMovieActorDS",
								"type": "DatasetReference"
							},
							"name": "VanarsdelMoveActors"
						},
						{
							"dataset": {
								"referenceName": "VanarsdelActorsDS",
								"type": "DatasetReference"
							},
							"name": "VanarsdelActorsSr"
						},
						{
							"dataset": {
								"referenceName": "FourthCoffeeMovieActorsDS",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeMovieActorsSr"
						},
						{
							"dataset": {
								"referenceName": "FourthCoffeeActorsDS",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeActorsSr"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "combinedStageMovies",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "CombinedMovieActorDS",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Select2"
						},
						{
							"name": "Join3"
						},
						{
							"name": "Select3"
						},
						{
							"name": "Join4"
						},
						{
							"name": "Select4"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Union1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Join5"
						},
						{
							"name": "Select5"
						},
						{
							"name": "Join6"
						},
						{
							"name": "Select6"
						},
						{
							"name": "DerivedColumn4"
						},
						{
							"name": "Union2"
						}
					],
					"script": "source(output(\n\t\tMovieID as string,\n\t\tMovieTitle as string,\n\t\tCategory as string,\n\t\tRating as string,\n\t\tRunTimeMin as integer,\n\t\tReleaseDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelMovieSr\nsource(output(\n\t\tMovieID as string,\n\t\tOnlineMovieID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelMovieMap\nsource(output(\n\t\tMovieID as string,\n\t\tMovieTitle as string,\n\t\tCategory as string,\n\t\tRating as string,\n\t\tRunTimeMin as short,\n\t\tReleaseDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeMovieSr\nsource(output(\n\t\tMovieID as string,\n\t\tOnlineMovieID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeMovieMap\nsource(output(\n\t\tMovieActorID as string,\n\t\tMovieID as string,\n\t\tActorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelMoveActors\nsource(output(\n\t\tActorID as string,\n\t\tActorName as string,\n\t\tGender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelActorsSr\nsource(output(\n\t\tMovieActorID as string,\n\t\tMovieID as string,\n\t\tActorID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeMovieActorsSr\nsource(output(\n\t\tActorID as string,\n\t\tActorName as string,\n\t\tGender as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeActorsSr\nVanarsdelMovieSr, VanarsdelMovieMap join(VanarsdelMovieSr@MovieID == VanarsdelMovieMap@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tMovieID = VanarsdelMovieSr@MovieID,\n\t\tMovieTitle,\n\t\tCategory,\n\t\tRating,\n\t\tRunTimeMin,\n\t\tReleaseDate,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFourthCoffeeMovieSr, FourthCoffeeMovieMap join(FourthCoffeeMovieSr@MovieID == FourthCoffeeMovieMap@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tMovieID = FourthCoffeeMovieSr@MovieID,\n\t\tMovieTitle,\n\t\tCategory,\n\t\tRating,\n\t\tRunTimeMin,\n\t\tReleaseDate,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nVanarsdelMoveActors, VanarsdelMovieMap join(VanarsdelMoveActors@MovieID == VanarsdelMovieMap@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 select(mapColumn(\n\t\tMovieActorID,\n\t\tMovieID = VanarsdelMoveActors@MovieID,\n\t\tActorID,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3, VanarsdelActorsSr join(Select3@ActorID == VanarsdelActorsSr@ActorID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join4\nJoin4 select(mapColumn(\n\t\tMovieActorID,\n\t\tMovieID,\n\t\tActorID = Select3@ActorID,\n\t\tOnlineMovieID,\n\t\tActorName,\n\t\tGender\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nSelect4 derive(SourceSystemId = 3) ~> DerivedColumn1\nDerivedColumn2, DerivedColumn3 union(byName: true)~> Union1\nSelect1 derive(SourceSystemId = 3,\n\t\tReleaseDate = toDate(ReleaseDate, \"MM-dd-yyyy\")) ~> DerivedColumn2\nSelect2 derive(SourceSystemId = 2,\n\t\tReleaseDate = toDate(ReleaseDate, \"MM-dd-yyyy\")) ~> DerivedColumn3\nFourthCoffeeMovieActorsSr, FourthCoffeeMovieMap join(FourthCoffeeMovieActorsSr@MovieID == FourthCoffeeMovieMap@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join5\nJoin5 select(mapColumn(\n\t\tMovieActorID,\n\t\tMovieID = FourthCoffeeMovieActorsSr@MovieID,\n\t\tActorID,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect5, FourthCoffeeActorsSr join(Select5@ActorID == FourthCoffeeActorsSr@ActorID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join6\nJoin6 select(mapColumn(\n\t\tMovieActorID,\n\t\tMovieID,\n\t\tActorID = Select5@ActorID,\n\t\tOnlineMovieID,\n\t\tActorName,\n\t\tGender\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nSelect6 derive(SourceSystemId = 2) ~> DerivedColumn4\nDerivedColumn1, DerivedColumn4 union(byName: true)~> Union2\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['combinedOnPremiseMovies'],\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nUnion2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['combinedMovieActors'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/VanarsdelMovieDS')]",
				"[concat(variables('factoryId'), '/datasets/VanardselMovieMapDS')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedFourthCoffeeMovieDS')]",
				"[concat(variables('factoryId'), '/datasets/FourthCoffeeMovieMapDS')]",
				"[concat(variables('factoryId'), '/datasets/VanarsdelMovieActorDS')]",
				"[concat(variables('factoryId'), '/datasets/VanarsdelActorsDS')]",
				"[concat(variables('factoryId'), '/datasets/FourthCoffeeMovieActorsDS')]",
				"[concat(variables('factoryId'), '/datasets/FourthCoffeeActorsDS')]",
				"[concat(variables('factoryId'), '/datasets/combinedStageMovies')]",
				"[concat(variables('factoryId'), '/datasets/CombinedMovieActorDS')]"
			]
		}
	]
}