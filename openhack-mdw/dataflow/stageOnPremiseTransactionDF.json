{
	"name": "stageOnPremiseTransactionDF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "vanarsdelTransDS",
						"type": "DatasetReference"
					},
					"name": "VanarsdelTransactionsSr"
				},
				{
					"dataset": {
						"referenceName": "VanardselMovieMapDS",
						"type": "DatasetReference"
					},
					"name": "VanarsdelMovieMapSr"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "FourthCoffeeTransactionSr"
				},
				{
					"dataset": {
						"referenceName": "FourthCoffeeMovieMapDS",
						"type": "DatasetReference"
					},
					"name": "FourthCoffeeMovieMapSr"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "combinedStageOnPremTransactionDS",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Select2"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "Union1"
				}
			],
			"script": "source(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tRentalDate as integer,\n\t\tReturnDate as integer,\n\t\tRentalCost as decimal(19,4),\n\t\tLateFee as decimal(19,4),\n\t\tRewindFlag as boolean,\n\t\tCreatedDate as date,\n\t\tUpdatedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelTransactionsSr\nsource(output(\n\t\tMovieID as string,\n\t\tOnlineMovieID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> VanarsdelMovieMapSr\nsource(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tRentalDate as string,\n\t\tReturnDate as string,\n\t\tRentalCost as string,\n\t\tLateFee as string,\n\t\tRewindFlag as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeTransactionSr\nsource(output(\n\t\tMovieID as string,\n\t\tOnlineMovieID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> FourthCoffeeMovieMapSr\nVanarsdelTransactionsSr, VanarsdelMovieMapSr join(VanarsdelTransactionsSr@MovieID == VanarsdelMovieMapSr@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tTransactionID,\n\t\tCustomerID,\n\t\tMovieID = VanarsdelTransactionsSr@MovieID,\n\t\tRentalDate,\n\t\tReturnDate,\n\t\tRentalCost,\n\t\tLateFee,\n\t\tRewindFlag,\n\t\tCreatedDate,\n\t\tUpdatedDate,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(SourceSystemId = 3,\n\t\tRentalDate = toDate(concat(left(toString(RentalDate), 4), '-', left(right(toString(RentalDate),4), 2), '-', right(right(toString(RentalDate), 4), 2)), \"yyyy-MM-dd\"),\n\t\tReturnDate = toDate(concat(left(toString(ReturnDate), 4), '-', left(right(toString(ReturnDate),4), 2), '-', right(right(toString(ReturnDate), 4), 2)), \"yyyy-MM-dd\"),\n\t\tRentalCost = toDecimal(RentalCost),\n\t\tLateFee = toDecimal(LateFee)) ~> DerivedColumn1\nFourthCoffeeTransactionSr, FourthCoffeeMovieMapSr join(FourthCoffeeTransactionSr@MovieID == FourthCoffeeMovieMapSr@MovieID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nJoin2 select(mapColumn(\n\t\tTransactionID,\n\t\tCustomerID,\n\t\tMovieID = FourthCoffeeTransactionSr@MovieID,\n\t\tRentalDate,\n\t\tReturnDate,\n\t\tRentalCost,\n\t\tLateFee,\n\t\tRewindFlag,\n\t\tCreatedDate,\n\t\tUpdatedDate,\n\t\tOnlineMovieID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 derive(SourceSystemId = 2,\n\t\tRentalDate = toDate(concat(left(toString(RentalDate), 4), '-', left(right(toString(RentalDate),4), 2), '-', right(right(toString(RentalDate), 4), 2)), \"yyyy-MM-dd\"),\n\t\tReturnDate = toDate(concat(left(toString(ReturnDate), 4), '-', left(right(toString(ReturnDate),4), 2), '-', right(right(toString(ReturnDate), 4), 2)), \"yyyy-MM-dd\"),\n\t\tLateFee = toDecimal(LateFee),\n\t\tRentalCost = toDecimal(RentalCost),\n\t\tRewindFlag = toBoolean(toString(RewindFlag)),\n\t\tCreatedDate = toDate(CreatedDate),\n\t\tUpdatedDate = toDate(UpdatedDate)) ~> DerivedColumn2\nDerivedColumn1, DerivedColumn2 union(byName: true)~> Union1\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['combinedOnPremTransactions'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}